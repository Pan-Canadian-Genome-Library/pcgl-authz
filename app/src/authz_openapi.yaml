openapi: 3.0.0
info:
  version: v1.0.0
  title: 'PCGL Authorization Service'
  description: 'API for determining authorization in PCGL'
servers:
  - url: http://localhost:1235/authz
  - url: /authz
paths:
  /service-info:
    get:
      summary: Retrieve information about this service
      description: Returns information about the ingest service
      operationId: authz_operations.get_service_info
      responses:
        200:
          description: Retrieve info about the ingest service
          content:
            application/json:
              schema:
                type: object
  /group/{group_id}:
    parameters:
      - in: path
        name: group_id
        description: the COGroup ID of the group
        schema:
          type: string
        required: true
    get:
      summary: List users in group_id
      description: List users in group_id
      operationId: authz_operations.list_group
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  description: user_ids
  /service:
    get:
      summary: List registered services
      operationId: authz_operations.list_services
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceRegistration'
    post:
      summary: Register service in authorization system
      operationId: authz_operations.add_service
      requestBody:
        $ref: '#/components/requestBodies/ServiceRegistrationRequest'
      responses:
        200:
          description: Success. Includes the assigned service UUID. The registering service needs to save the UUID for creating verification tokens.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRegistration'
  /service/{service_id}:
    parameters:
      - in: path
        name: service_id
        schema:
          type: string
        required: true
    get:
      summary: Get registered service
      operationId: authz_operations.get_service
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRegistration'
    delete:
      summary: Remove registered service
      operationId: authz_operations.remove_service
      responses:
        200:
          description: Success
  /service/{service_id}/verify:
    parameters:
      - in: path
        name: service_id
        schema:
          type: string
        required: true
    get:
      summary: Verify a service token
      operationId: authz_operations.verify_service_token
      parameters:
        - in: header
          name: X-Service-Token
          schema:
            type: string
          required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    description: Whether or not the service token comes from the service
                    type: boolean
    post:
      summary: Create a verification token for a service
      operationId: authz_operations.create_service_token
      requestBody:
        $ref: '#/components/requestBodies/ServiceVerificationTokenRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRegistration'
  /study:
    post:
      summary: Add authorization information for a study
      description: Add authorization information for a study
      operationId: authz_operations.add_study_authorization
      requestBody:
        $ref: '#/components/requestBodies/StudyAuthorizationRequest'
      responses:
          200:
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/StudyAuthorization'
    get:
      summary: List registered studies
      description: List studies authorized on server
      operationId: authz_operations.list_study_authorizations
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudyAuthorization'
  /study/{study_id}:
    parameters:
      - in: path
        name: study_id
        schema:
          type: string
        required: true
    get:
      summary: Get authorization information for a study
      description: Get authorization information for a study
      operationId: authz_operations.get_study_authorization
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudyAuthorization'
    delete:
      description: Delete a study
      operationId: authz_operations.remove_study_authorization
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudyAuthorization'
  /user/lookup:
    parameters:
      - in: query
        name: email
        schema:
          type: string
        required: false
    get:
      summary: Look up a PCGL user
      description: Look up a PCGL user
      operationId: authz_operations.lookup_user
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /user/{pcgl_id}:
    parameters:
      - in: path
        name: pcgl_id
        schema:
          type: string
        required: true
    get:
      summary: List study authorizations
      description: List authorizations for a user
      operationId: authz_operations.list_authz_for_user
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserAuthorization'
    post:
      summary: Add a study authorization for a user
      description: Authorize a study for a user (or update a study auth for a user)
      operationId: authz_operations.authorize_study_for_user
      requestBody:
        $ref: '#/components/requestBodies/DACAuthorizationRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAuthorization'
  /user/{user_id}/study/{study_id}:
    parameters:
      - in: path
        name: user_id
        schema:
          type: string
        required: true
      - in: path
        name: study_id
        schema:
          type: string
        required: true
    get:
      summary: Is a user authorized for a study?
      description: Is a user authorized for a study?
      operationId: authz_operations.get_study_for_user
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: boolean
    delete:
      summary: Remove a study authorization for a user
      description: Remove a study for a user
      operationId: authz_operations.remove_study_for_user
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
  /allowed:
    post:
      summary: Is the authorized user allowed to perform the requested action?
      description: Returns whether a user is allowed to perform the requested action on the specified datasets
      operationId: authz_operations.is_allowed
      requestBody:
        $ref: '#/components/requestBodies/ActionAuthorizationRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: boolean

components:
  requestBodies:
    ServiceRegistrationRequest:
      content:
        'application/json':
          schema:
            $ref: "#/components/schemas/ServiceRegistration"
    ServiceVerificationTokenRequest:
      content:
        'application/json':
          schema:
            type: object
            properties:
              service_uuid:
                type: string
                description: UUID of service, returned as part of service registration
            required:
              - service_uuid
    StudyAuthorizationRequest:
      content:
        'application/json':
          schema:
            $ref: "#/components/schemas/StudyAuthorization"
    DACAuthorizationRequest:
      content:
        'application/json':
          schema:
            $ref: "#/components/schemas/DACAuthorization"
    ActionAuthorizationRequest:
      content:
        'application/json':
          schema:
            type: object
            required:
              - action
            properties:
              action:
                $ref: "#/components/schemas/Action"
              studies:
                description: IDs of the studies for which authorization is being requested
                type: array
                items:
                  type: string
  schemas:
    ServiceRegistration:
      type: object
      description: PCGL service and its authorizable actions.
      required:
        - service_id
        - readable
        - editable
      properties:
        service_id:
          type: string
          description: ID of service
        readable:
          type: array
          description: Actions that allow a user to read data. Note that UPDATE and DELETE are not readable methods.
          items:
            $ref: "#/components/schemas/Action"
        editable:
          type: array
          description: Actions that allow a user to edit and delete data
          items:
            $ref: "#/components/schemas/Action"
    StudyAuthorization:
      type: object
      description: study and the researchers involved in this study
      properties:
        study_id:
          type: string
          description: name of the study
        study_curators:
          type: array
          description: list of users who are study curators for this study
          items:
            type: string
        team_members:
          type: array
          description: list of users who are original researchers for this study
          items:
            type: string
        creation_date:
          type: string
          description: date study was created, for embargo purposes. This may or may not be the date of ingest.
      required:
        - study_id
        - study_curators
        - team_members
    DACAuthorization:
      type: object
      description: a DAC approval that authorizes a user to access a study for a specified date range
      properties:
        study_id:
          type: string
        start_date:
          type: string
        end_date:
          type: string
      required:
        - study_id
        - start_date
        - end_date
    Action:
      type: object
      description: an action for which authorization is requested
      properties:
        endpoint:
          description: path to an endpoint that performs the requested action. Should be in the form of a GoLang regex, e.g. `/users/?.*`
          type: string
        method:
          description: the operation to be performed.
          type: string
          enum:
            - GET
            - POST
            - UPDATE
            - DELETE
      required:
        - endpoint
        - method
    UserAuthorization:
      type: object
      description: describes an authorized user and the programs the user is authorized to view
      properties:
        userinfo:
          $ref: "#/components/schemas/UserInfo"
        groups:
          type: array
          items:
            $ref: "#/components/schemas/COManageGroup"
        study_authorizations:
          type: object
          properties:
            team_member:
              type: array
              description: list of studies that the user is a team member of
              items:
                type: string
            study_curator:
              type: array
              description: list of studies that the user is a curator of
              items:
                type: string
            dac_authorizations:
              type: array
              description: list of studies that this user is authorized to view
              items:
                $ref: "#/components/schemas/DACAuthorization"
    UserInfo:
      type: object
      description: describes an authenticated user
      properties:
        emails:
          type: array
          items:
            $ref: "#/components/schemas/Email"
          description: a list of verified emails associated with the user
        pcgl_id:
          type: string
          description: user's pcgl ID
      required:
        - pcgl_id
    Email:
      type: object
      description: email address and its properties
      properties:
        address:
          type: string
          description: email address
        type:
          type: string
          description: enumerated type, as listed in https://spaces.at.internet2.edu/display/COmanage/Recommendations+For+Email+Addresses
    COManageGroup:
      type: object
      description: Information about the group from COManage
      properties:
        description:
          type: string
          description: group description
        id:
          type: integer
          description: group COID
        name:
          type: string
          description: group name
